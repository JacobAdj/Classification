name: ML Classification Workflow
run-name: ${{ github.actor }} workflow for ML classification 🚀
on: [push]
jobs:
  Use-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."

  
  Test_ML:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        pip install bentoml
        pip install scikit-learn
        pip install pandas

    - name: Set BentoML Store Path
      run: echo "BENTOML_HOME=${{ github.workspace }}/BentoML/bentoml_store" >> $GITHUB_ENV

    - name: Test BentoML Model
      run: python BentoML/tests/test_model.py


  Build_ML:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker Image
      run: |
        docker build -t logistic_regression_bento:latest -f BentoML/Dockerfile .


  Deploy_ML:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set Up Kubernetes CLI
      run: |
        curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/
    
    - name: Authenticate with Kubernetes in Codespaces
      run: |
        mkdir -p $HOME/.kube
        cp -i /workspaces/.codespaces/kube/config $HOME/.kube/config
        export KUBECONFIG=$HOME/.kube/config

    - name: Deploy BentoML Service
      run: |
        kubectl apply -f BentoML/deploy/deployment.yaml
